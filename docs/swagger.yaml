definitions:
  domain.Track:
    properties:
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      realise_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  service.TrackInput:
    properties:
      group_name:
        type: string
      id:
        type: integer
      link:
        type: string
      realise_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  v1.DeleteResponse:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  v1.ListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/domain.Track'
        type: array
      error:
        type: string
    type: object
  v1.TextResponse:
    properties:
      error:
        type: string
      text:
        items:
          type: string
        type: array
    type: object
  v1.UpdateResponse:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /track/delete:
    delete:
      consumes:
      - application/json
      description: Delete song from storage by id
      parameters:
      - description: song id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.DeleteResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.DeleteResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.DeleteResponse'
      summary: Delete song
      tags:
      - track
  /track/list:
    get:
      consumes:
      - application/json
      description: get tracks with filter by query get params. Get parameters is optional
      parameters:
      - description: song id
        in: path
        name: id
        type: integer
      - description: group name
        in: path
        name: group_name
        type: string
      - description: song name
        in: path
        name: song
        type: string
      - description: gong text
        in: path
        name: text
        type: string
      - description: realise date
        in: path
        name: realise_date
        type: string
      - description: limit
        in: path
        name: limit
        type: integer
      - description: offset
        in: path
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.ListResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.ListResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.ListResponse'
      summary: Get list of song
      tags:
      - track
  /track/text:
    get:
      consumes:
      - application/json
      description: get song text with id separated by choruses
      parameters:
      - description: song id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TextResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.TextResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.TextResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.TextResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.TextResponse'
      summary: Get song text
      tags:
      - track
  /track/update:
    post:
      consumes:
      - application/json
      description: Update song by id
      parameters:
      - description: id is required param
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/service.TrackInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UpdateResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.UpdateResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.UpdateResponse'
      summary: Update song
      tags:
      - track
swagger: "2.0"
